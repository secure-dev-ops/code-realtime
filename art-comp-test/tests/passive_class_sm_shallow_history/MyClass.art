
class MyClass {
    [[rt::header_preface]]
    `
        #include <iostream>
    `
    [[rt::decl]]
    `
        public:
            MyClass();
        public:
            int S2_entry_count = 0;
            int A_entry_count = 0;
            int B_entry_count = 0;
    `
    [[rt::impl]]
    `
        MyClass::MyClass() {
            rtg_init1();
        }
    `

    /* Trigger Operation triggerHistoryOrB */
    trigger triggerHistoryOrB(`bool` value);
    trigger op();
    /* State Machine */
    statemachine {
        state S1 {
            entrypoint ep;
             entry
            `
                S2_entry_count++;
            `;
             state A {
                entry
                `   
                    A_entry_count++;
                    std::cout << "A_entry_count " << A_entry_count << std::endl;
                `;
            };
            state B {
                entry
                `   
                    B_entry_count++;
                    std::cout << "B_entry_count " << B_entry_count << std::endl;
                `;
            };
            t_Initial_inner: ep -> A;
            t_A_history: A -> history on triggerHistoryOrB(`bool`)[`value`] ;
            t_B: A -> B on triggerHistoryOrB(`bool`)[`!value`];
            t_B_history: B -> history  on op() when `B_entry_count < 3`;

        };    
        initial -> S1.ep;    
        
    };
};